<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>Chapter 4. Guest Additions</title><meta name="generator" content="DocBook XSL Stylesheets V1.69.1"><link rel="start" href="index.html" title="Oracle VM VirtualBox®"><link rel="up" href="index.html" title="Oracle VM VirtualBox®"><link rel="prev" href="ch03.html" title="Chapter 3. Configuring virtual machines"><link rel="next" href="ch05.html" title="Chapter 5. Virtual storage"><style type="text/css"><!--
   body
   {
     font-family:  Verdana, Sans-serif, Arial, 'Trebuchet MS', 'Times New Roman';
     font-size: small;
   }
   h2.title
   {
     font-family: Verdana, Sans-serif, Arial, 'Trebuchet MS', 'Times New Roman';
     margin: 5px 0 0;
     padding: 1px 5px 1px;
     border: 1px solid #6b89d4;
     -moz-border-radius: 0.3em;
     background: #e6edff;
   }
   .titlepage
   {
     text-align: center;
   }
   .refsynopsisdiv, .refsect1, .refsect2, .refsect3
   {
     text-align: left;
   }
   .warning 
   {
     padding: 5px;
     border: 1px solid #ff0011;
     -moz-border-radius: 0.3em;
     background: #ffbbbb;
   }
   .warning .title { margin: 0px 0px 5px 0px; }
   .warning p { margin: 1px; }
   .note 
   {
     padding: 1px 5px 1px;
     border: 1px solid #84c43b;
     -moz-border-radius: 0.3em;
     background: #d7e9a7;
   }
   .note .title { margin: 0px 0px 5px 0px; }
   .note p { margin: 1px; }
   .cmdsynopsis
   {
     font-family: monospace;
   }
   .refsynopsisdiv        > .cmdsynopsis p, .refsect1        > .cmdsynopsis p,
   .refsynopsisdiv .sect2 > .cmdsynopsis p, .refsect1 .sect2 > .cmdsynopsis p
   {
     margin-top: 0px;
     margin-bottom: 0px;
   }
   .cmdsynopsis p
   {
     padding-left: 3.4em;
     text-indent: -2.2em;
   }
   p.nextcommand
   {
     margin-top:    0px;
     margin-bottom: 0px;
   }
   p.lastcommand
   {
     margin-top:    0px;
   }
   .refentry * h3
   {
     font-size: large;
   }
   .refentry * h4
   {
     font-size: larger;
   }
   .refentry * h5
   {
     font-size: larger;
   }

  --></style></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="chapter" lang="en"><div class="titlepage"><div><div><h2 class="title"><a name="guestadditions"></a>Chapter 4. Guest Additions</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="sect1"><a href="ch04.html#idm1721">4.1. Introduction</a></span></dt><dt><span class="sect1"><a href="ch04.html#idm1784">4.2. Installing and Maintaining Guest Additions</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch04.html#additions-windows">4.2.1. Guest Additions for Windows</a></span></dt><dt><span class="sect2"><a href="ch04.html#idm1948">4.2.2. Guest Additions for Linux</a></span></dt><dt><span class="sect2"><a href="ch04.html#idm2003">4.2.3. Guest Additions for Solaris</a></span></dt><dt><span class="sect2"><a href="ch04.html#idm2037">4.2.4. Guest Additions for OS/2</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch04.html#sharedfolders">4.3. Shared folders</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch04.html#sf_mount_manual">4.3.1. Manual mounting</a></span></dt><dt><span class="sect2"><a href="ch04.html#sf_mount_auto">4.3.2. Automatic mounting</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch04.html#guestadd-dnd">4.4. Drag and Drop</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch04.html#guestadd-dnd-formats">4.4.1. Supported formats</a></span></dt><dt><span class="sect2"><a href="ch04.html#guestadd-dnd-limitations">4.4.2. Known limitations</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch04.html#guestadd-video">4.5. Hardware-accelerated graphics</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch04.html#guestadd-3d">4.5.1. Hardware 3D acceleration (OpenGL and Direct3D 8/9)</a></span></dt><dt><span class="sect2"><a href="ch04.html#guestadd-2d">4.5.2. Hardware 2D video acceleration for Windows guests</a></span></dt></dl></dd><dt><span class="sect1"><a href="ch04.html#seamlesswindows">4.6. Seamless windows</a></span></dt><dt><span class="sect1"><a href="ch04.html#guestadd-guestprops">4.7. Guest properties</a></span></dt><dt><span class="sect1"><a href="ch04.html#guestadd-guestcontrol">4.8. Guest control</a></span></dt><dt><span class="sect1"><a href="ch04.html#idm2314">4.9. Memory overcommitment</a></span></dt><dd><dl><dt><span class="sect2"><a href="ch04.html#guestadd-balloon">4.9.1. Memory ballooning</a></span></dt><dt><span class="sect2"><a href="ch04.html#guestadd-pagefusion">4.9.2. Page Fusion</a></span></dt></dl></dd></dl></div><p>The previous chapter covered getting started with VirtualBox and
  installing operating systems in a virtual machine. For any serious and
  interactive use, the VirtualBox Guest Additions will make your life much
  easier by providing closer integration between host and guest and improving
  the interactive performance of guest systems. This chapter describes the
  Guest Additions in detail.</p><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="idm1721"></a>4.1. Introduction</h2></div></div></div><p>As mentioned in <a href="ch01.html#virtintro" title="1.2. Some terminology">Section 1.2, &#8220;Some terminology&#8221;</a>, the Guest Additions
    are designed to be installed <span class="emphasis"><em>inside</em></span> a virtual machine
    after the guest operating system has been installed. They consist of
    device drivers and system applications that optimize the guest operating
    system for better performance and usability. Please see <a href="ch03.html#guestossupport" title="3.1. Supported guest operating systems">Section 3.1, &#8220;Supported guest operating systems&#8221;</a> for details on what guest operating systems
    are fully supported with Guest Additions by VirtualBox.</p><p>The VirtualBox Guest Additions for all supported guest operating
    systems are provided as a single CD-ROM image file which is called
    <code class="computeroutput">VBoxGuestAdditions.iso</code>. This image file
    is located in the installation directory of VirtualBox. To install the
    Guest Additions for a particular VM, you mount this ISO file in your VM as
    a virtual CD-ROM and install from there.</p><p>The Guest Additions offer the following features:</p><div class="glosslist"><dl><dt>Mouse pointer integration</dt><dd><p>To overcome the limitations for mouse support that were
            described in <a href="ch01.html#keyb_mouse_normal" title="1.8.2. Capturing and releasing keyboard and mouse">Section 1.8.2, &#8220;Capturing and releasing keyboard and mouse&#8221;</a>, this provides
            you with seamless mouse support. You will only have one mouse
            pointer and pressing the Host key is no longer required to "free"
            the mouse from being captured by the guest OS. To make this work,
            a special mouse driver is installed in the guest that communicates
            with the "real" mouse driver on your host and moves the guest
            mouse pointer accordingly.</p></dd><dt>Shared folders</dt><dd><p>These provide an easy way to exchange files between the host
            and the guest. Much like ordinary Windows network shares, you can
            tell VirtualBox to treat a certain host directory as a shared
            folder, and VirtualBox will make it available to the guest
            operating system as a network share, irrespective of whether guest
            actually has a network. For details, please refer to <a href="ch04.html#sharedfolders" title="4.3. Shared folders">Section 4.3, &#8220;Shared folders&#8221;</a>.</p></dd><dt>Better video support</dt><dd><p>While the virtual graphics card which VirtualBox emulates
            for any guest operating system provides all the basic features,
            the custom video drivers that are installed with the Guest
            Additions provide you with extra high and non-standard video modes
            as well as accelerated video performance.</p><p>In addition, with Windows, Linux and Solaris guests, you can
            resize the virtual machine's window if the Guest Additions are
            installed. The video resolution in the guest will be automatically
            adjusted (as if you had manually entered an arbitrary resolution
            in the guest's display settings). Please see <a href="ch01.html#intro-resize-window" title="1.8.5. Resizing the machine's window">Section 1.8.5, &#8220;Resizing the machine's window&#8221;</a> also.</p><p>Finally, if the Guest Additions are installed, 3D graphics
            and 2D video for guest applications can be accelerated; see <a href="ch04.html#guestadd-video" title="4.5. Hardware-accelerated graphics">Section 4.5, &#8220;Hardware-accelerated graphics&#8221;</a>.</p></dd><dt>Seamless windows</dt><dd><p>With this feature, the individual windows that are displayed
            on the desktop of the virtual machine can be mapped on the host's
            desktop, as if the underlying application was actually running on
            the host. See <a href="ch04.html#seamlesswindows" title="4.6. Seamless windows">Section 4.6, &#8220;Seamless windows&#8221;</a> for
            details.</p></dd><dt>Generic host/guest communication channels</dt><dd><p>The Guest Additions enable you to control and monitor guest
            execution in ways other than those mentioned above. The so-called
            "guest properties" provide a generic string-based mechanism to
            exchange data bits between a guest and a host, some of which have
            special meanings for controlling and monitoring the guest; see
            <a href="ch04.html#guestadd-guestprops" title="4.7. Guest properties">Section 4.7, &#8220;Guest properties&#8221;</a> for details.</p><p>Additionally, applications can be started in a guest from
            the host; see <a href="ch04.html#guestadd-guestcontrol" title="4.8. Guest control">Section 4.8, &#8220;Guest control&#8221;</a>.</p></dd><dt>Time synchronization</dt><dd><p>With the Guest Additions installed, VirtualBox can ensure
            that the guest's system time is better synchronized with that of
            the host.</p><p>For various reasons, the time in the guest might run at a
            slightly different rate than the time on the host. The host could
            be receiving updates via NTP and its own time might not run
            linearly. A VM could also be paused, which stops the flow of time
            in the guest for a shorter or longer period of time. When the wall
            clock time between the guest and host only differs slightly, the
            time synchronization service attempts to gradually and smoothly
            adjust the guest time in small increments to either "catch up" or
            "lose" time. When the difference is too great (e.g., a VM paused
            for hours or restored from saved state), the guest time is changed
            immediately, without a gradual adjustment.</p><p>The Guest Additions will re-synchronize the time regularly.
            See <a href="ch09.html#changetimesync" title="9.14.3. Tuning the Guest Additions time synchronization
      parameters">Section 9.14.3, &#8220;Tuning the Guest Additions time synchronization
      parameters&#8221;</a> for how to configure the
            parameters of the time synchronization mechanism.</p></dd><dt>Shared clipboard</dt><dd><p>With the Guest Additions installed, the clipboard of the
            guest operating system can optionally be shared with your host
            operating system; see <a href="ch03.html#generalsettings" title="3.3. General settings">Section 3.3, &#8220;General settings&#8221;</a>.</p></dd><dt>Automated logons (credentials passing)</dt><dd><p>For details, please see <a href="ch09.html#autologon" title="9.2. Automated guest logons">Section 9.2, &#8220;Automated guest logons&#8221;</a>.</p></dd></dl></div><p>Each version of VirtualBox, even minor releases, ship with their own
    version of the Guest Additions. While the interfaces through which the
    VirtualBox core communicates with the Guest Additions are kept stable so
    that Guest Additions already installed in a VM should continue to work
    when VirtualBox is upgraded on the host, for best results, it is
    recommended to keep the Guest Additions at the same version.</p><p>Starting with VirtualBox 3.1, the Windows and Linux Guest Additions
    therefore check automatically whether they have to be updated. If the host
    is running a newer VirtualBox version than the Guest Additions, a
    notification with further instructions is displayed in the guest.</p><p>To disable this update check for the Guest Additions of a given
    virtual machine, set the value of its
    <code class="computeroutput">/VirtualBox/GuestAdd/CheckHostVersion</code>
    guest property to <code class="computeroutput">0</code>; see <a href="ch04.html#guestadd-guestprops" title="4.7. Guest properties">Section 4.7, &#8220;Guest properties&#8221;</a> for details.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="idm1784"></a>4.2. Installing and Maintaining Guest Additions</h2></div></div></div><p>Guest Additions are available for virtual machines running Windows,
    Linux, Solaris or OS/2. The following sections describe the specifics of
    each variant in detail.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="additions-windows"></a>4.2.1. Guest Additions for Windows</h3></div></div></div><p>The VirtualBox Windows Guest Additions are designed to be
      installed in a virtual machine running a Windows operating system. The
      following versions of Windows guests are supported:</p><div class="itemizedlist"><ul type="disc"><li><p>Microsoft Windows NT 4.0 (any service pack)</p></li><li><p>Microsoft Windows 2000 (any service pack)</p></li><li><p>Microsoft Windows XP (any service pack)</p></li><li><p>Microsoft Windows Server 2003 (any service pack)</p></li><li><p>Microsoft Windows Server 2008</p></li><li><p>Microsoft Windows Vista (all editions)</p></li><li><p>Microsoft Windows 7 (all editions)</p></li><li><p>Microsoft Windows 8 (all editions)</p></li><li><p>Microsoft Windows 10 RTM build 10240</p></li><li><p>Microsoft Windows Server 2012</p></li></ul></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="mountingadditionsiso"></a>4.2.1.1. Installation</h4></div></div></div><p>In the "Devices" menu in the virtual machine's menu bar,
        VirtualBox has a handy menu item named "Insert Guest Additions CD image",
        which mounts the Guest Additions ISO file inside your virtual machine.
        A Windows guest should then automatically start the Guest Additions
        installer, which installs the Guest Additions into your Windows
        guest. Other guest operating systems (or if automatic start of
        software on CD is disabled) need manual start of the installer.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>For the basic Direct3D acceleration to work in a Windows Guest, you
          have to install the Guest Additions in "Safe Mode".
          This does <span class="bold"><strong>not</strong></span> apply to the experimental
          WDDM Direct3D video driver available
          for Vista and Windows 7 guests, see <a href="ch14.html" title="Chapter 14. Known limitations">Chapter 14, <i>Known limitations</i></a> for
          details.<sup>[<a name="idm1818" href="#ftn.idm1818">18</a>]</sup></p></div><p>If you prefer to mount the additions manually, you can perform
        the following steps:</p><div class="orderedlist"><ol type="1"><li><p>Start the virtual machine in which you have installed
            Windows.</p></li><li><p>Select "Mount CD/DVD-ROM" from the "Devices" menu in the
            virtual machine's menu bar and then "CD/DVD-ROM image". This
            brings up the Virtual Media Manager described in <a href="ch05.html#vdis" title="5.3. The Virtual Media Manager">Section 5.3, &#8220;The Virtual Media Manager&#8221;</a>.</p></li><li><p>In the Virtual Media Manager, press the "Add" button and
            browse your host file system for the
            <code class="computeroutput">VBoxGuestAdditions.iso</code>
            file:</p><div class="itemizedlist"><ul type="disc"><li><p>On a Windows host, you can find this file in the
                  VirtualBox installation directory (usually under
                  <code class="computeroutput">C:\Program
                  files\Oracle\VirtualBox</code> ).</p></li><li><p>On Mac OS X hosts, you can find this file in the
                  application bundle of VirtualBox. (Right click on the
                  VirtualBox icon in Finder and choose <span class="emphasis"><em>Show Package
                  Contents</em></span>. There it is located in the
                  <code class="computeroutput">Contents/MacOS</code>
                  folder.)</p></li><li><p>On a Linux host, you can find this file in the
                  <code class="computeroutput">additions</code> folder under
                  where you installed VirtualBox (normally
                  <code class="computeroutput">/opt/VirtualBox/</code>).</p></li><li><p>On Solaris hosts, you can find this file in the
                  <code class="computeroutput">additions</code> folder under
                  where you installed VirtualBox (normally
                  <code class="computeroutput">/opt/VirtualBox</code>).</p></li></ul></div></li><li><p>Back in the Virtual Media Manager, select that ISO file and
            press the "Select" button. This will mount the ISO file and
            present it to your Windows guest as a CD-ROM.</p></li></ol></div><p>Unless you have the Autostart feature disabled in your Windows
        guest, Windows will now autostart the VirtualBox Guest Additions
        installation program from the Additions ISO. If the Autostart feature
        has been turned off, choose
        <code class="computeroutput">VBoxWindowsAdditions.exe</code> from the
        CD/DVD drive inside the guest to start the installer.</p><p>The installer will add several device drivers to the Windows
        driver database and then invoke the hardware detection wizard.</p><p>Depending on your configuration, it might display warnings that
        the drivers are not digitally signed. You must confirm these in order
        to continue the installation and properly install the
        Additions.</p><p>After installation, reboot your guest operating system to
        activate the Additions.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm1853"></a>4.2.1.2. Updating the Windows Guest Additions</h4></div></div></div><p>Windows Guest Additions can be updated by running the
        installation program again, as previously described. This will then
        replace the previous Additions drivers with updated versions.</p><p>Alternatively, you may also open the Windows Device Manager and
        select "Update driver..." for two devices:</p><div class="orderedlist"><ol type="1"><li><p>the VirtualBox Graphics Adapter and</p></li><li><p>the VirtualBox System Device.</p></li></ol></div><p>For each, choose to provide your own driver and use "Have Disk"
        to point the wizard to the CD-ROM drive with the Guest
        Additions.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm1863"></a>4.2.1.3. Unattended Installation</h4></div></div></div><p>As a prerequisite for avoid popups while performing an
        unattended installation of the VirtualBox Guest Additions, the code
        signing certificates used to sign the drivers needs to be installed in
        the right certificates stores in the guest system.  Failing to do this
        will cause a typical windows installation to pop up a dialog asking
        whether its allowable to install each driver.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>On some Windows versions like Windows 2000 and Windows XP the user intervention
        popups mentioned above always will be displayed, even after importing the Oracle certificates.</p></div><p>Since VirtualBox 4.2 installing those code signing certificates
        on a Windows guest can be done in an automated fashion using the
        <code class="computeroutput">VBoxCertUtil.exe</code> utility found on the Guest
        Additions installation CD in the <code class="computeroutput">cert</code>
        folder:</p><div class="itemizedlist"><ul type="disc"><li><p>Log in as Administrator on the guest.</p></li><li><p>Mount the VirtualBox Guest Additions .ISO.</p></li><li><p>Open a command line window on the guest and change to
            the <code class="computeroutput">cert</code> folder on the VirtualBox
            Guest Additions CD.</p></li><li><p>Do</p><pre class="screen">for %i in (vbox*.cer) do VBoxCertUtil add-trusted-publisher %i --root %i</pre><p>This will install the certificates to the certificate store. When installing the same certificate
            more than once, an appropriate error will be displayed.</p></li></ul></div><p>Prior to VirtualBox 4.2 the code signing certificates need to be imported in more manual style
        using the <code class="computeroutput">certutil.exe</code> utility, which is shipped since Windows
        Vista.  For Windows versions before Vista you need to download and install <code class="computeroutput">certutil.exe</code>
        manually. Since the certificates are not accompanied on the VirtualBox Guest Additions CD-ROM
        prior to 4.2, these need to get extracted from a signed VirtualBox executable first.</p><p>In the following example the needed certificates will be extracted from the VirtualBox
        Windows Guest Additions installer on the CD-ROM:</p><div class="glosslist"><dl><dt>VeriSign Code Signing CA</dt><dd><p>Open the Windows Explorer.</p><div class="itemizedlist"><ul type="disc"><li><p>Right click on VBoxWindowsAdditions-&lt;Architecture&gt;.exe,
                  click on "Properties"</p></li><li><p>Go to tab "Digital Signatures", choose "Oracle Corporation" and click on "Details"</p></li><li><p>In tab "General" click on "View Certificate"</p></li><li><p>In tab "Certification Path" select "VeriSign Class 3 Public Primary CA"</p></li><li><p>Click on "View Certificate"</p></li><li><p>In tab "Details" click on "Copy to File ..."</p></li><li><p>In the upcoming wizard choose "DER encoded binary X.509 (.CER)"
                  and save the certificate file to a local path, finish the wizard</p></li><li><p>Close certificate dialog for "Verisign Class 3 Code Signing
                  2010 CA"</p></li></ul></div></dd><dt>Oracle Corporation</dt><dd><p>Open the Windows Explorer.</p><div class="itemizedlist"><ul type="disc"><li><p>Right click on VBoxWindowsAdditions-&lt;Architecture&gt;.exe,
                  click on "Properties"</p></li><li><p>Go to tab "Digital Signatures", choose "Oracle Corporation" and click on "Details"</p></li><li><p>In tab "General" click on "View Certificate"</p></li><li><p>In tab "Details" click on "Copy to File ..."</p></li><li><p>In the upcoming wizard choose "DER encoded binary X.509 (.CER)"
                  and save the certificate file to a local path, finish the wizard</p></li><li><p>Close certificate dialog for "Oracle Corporation"</p></li></ul></div></dd></dl></div><p>After exporting the two certificates above they can be imported into the
        certificate store using the <code class="computeroutput">certutil.exe</code>
        utility:</p><p><code class="computeroutput">certutil -addstore -f Root "&lt;Path to exported
        certificate file&gt;"</code></p><p>In order to allow for completely unattended guest installations,
        you can specify a command line parameter to the install
        launcher:</p><pre class="screen">VBoxWindowsAdditions.exe /S</pre><p>This automatically installs the right files and drivers for the
        corresponding platform (32- or 64-bit).</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>By default on an unattended installation on a Windows 7 or 8
        guest, there will be the XPDM graphics driver installed. This graphics
        driver does not support Windows Aero / Direct3D on the guest - instead the
        experimental WDDM graphics driver needs to be installed. To select this
        driver by default, add the command line parameter
        <code class="computeroutput">/with_wddm</code> when invoking the Windows
        Guest Additions installer.</p></div><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>For Windows Aero to run correctly on a guest, the guest's
        VRAM size needs to be configured to at least 128 MB.</p></div><p>For more options regarding unattended guest installations,
        consult the command line help by using the command:</p><pre class="screen">VBoxWindowsAdditions.exe /?</pre></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="windows-guest-file-extraction"></a>4.2.1.4. Manual file extraction</h4></div></div></div><p>If you would like to install the files and drivers manually, you
        can extract the files from the Windows Guest Additions setup by
        typing:</p><pre class="screen">VBoxWindowsAdditions.exe /extract</pre><p>To explicitly extract the Windows Guest Additions for another
        platform than the current running one (e.g. 64-bit files on a 32-bit
        system), you have to execute the appropriate platform installer
        (<code class="computeroutput">VBoxWindowsAdditions-x86.exe</code> or
        <code class="computeroutput">VBoxWindowsAdditions-amd64.exe</code>) with
        the <code class="computeroutput">/extract</code> parameter.</p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="idm1948"></a>4.2.2. Guest Additions for Linux</h3></div></div></div><p>Like the Windows Guest Additions, the VirtualBox Guest Additions
      for Linux are a set of device drivers and system applications which may
      be installed in the guest operating system.</p><p>The following Linux distributions are officially supported:</p><div class="itemizedlist"><ul type="disc"><li><p>Oracle Linux as of version 5 including UEK kernels;</p></li><li><p>Fedora as of Fedora Core 4;</p></li><li><p>Redhat Enterprise Linux as of version 3;</p></li><li><p>SUSE and openSUSE Linux as of version 9;</p></li><li><p>Ubuntu as of version 5.10.</p></li></ul></div><p>Many other distributions are known to work with the Guest
      Additions.</p><p>The version of the Linux kernel supplied by default in SUSE and
      openSUSE 10.2, Ubuntu 6.10 (all versions) and Ubuntu 6.06 (server
      edition) contains a bug which can cause it to crash during startup when
      it is run in a virtual machine. The Guest Additions work in those
      distributions.</p><p>Note that some Linux distributions already come with all or part of
      the VirtualBox Guest Additions. You may choose to keep the distribution's
      version of the Guest Additions but these are often not up to date and
      limited in functionality, so we recommend replacing them with the
      Guest Additions that come with VirtualBox. The VirtualBox Linux Guest
      Additions installer tries to detect existing installation and replace
      them but depending on how the distribution integrates the Guest
      Additions, this may require some manual interaction. It is highly
      recommended to take a snapshot of the virtual machine before replacing
      pre-installed Guest Additions.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm1966"></a>4.2.2.1. Installing the Linux Guest Additions</h4></div></div></div><p>The VirtualBox Guest Additions for Linux are provided on the
        same virtual CD-ROM file as the Guest Additions for Windows described
        above. They also come with an installation program guiding you through
        the setup process, although, due to the significant differences between
        Linux distributions, installation may be slightly more complex.</p><p>Installation generally involves the following steps:</p><div class="orderedlist"><ol type="1"><li><p>Before installing the Guest Additions, you will have to
            prepare your guest system for building external kernel modules.
            This works similarly as described in <a href="ch02.html#externalkernelmodules" title="2.3.2. The VirtualBox driver modules">Section 2.3.2, &#8220;The VirtualBox driver modules&#8221;</a>, except that this step must now
            be performed in your Linux <span class="emphasis"><em>guest</em></span> instead of
            on a Linux host system, as described there.</p><p>If you suspect that something has gone wrong, check that your
            guest is set up correctly and try executing the command
            </p><pre class="screen">rcvboxadd setup</pre><p> as root.</p></li><li><p>Insert the
            <code class="computeroutput">VBoxGuestAdditions.iso</code> CD file
            into your Linux guest's virtual CD-ROM drive, exactly the same way
            as described for a Windows guest in <a href="ch04.html#mountingadditionsiso" title="4.2.1.1. Installation">Section 4.2.1.1, &#8220;Installation&#8221;</a>.</p></li><li><p>Change to the directory where your CD-ROM drive is mounted
            and execute as root:</p><pre class="screen">sh ./VBoxLinuxAdditions.run</pre></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm1984"></a>4.2.2.2. Graphics and mouse integration</h4></div></div></div><p>In Linux and Solaris guests, VirtualBox graphics and mouse
        integration goes through the X Window System.  VirtualBox can use
        the X.Org variant of the system (or XFree86 version 4.3 which is
        identical to the first X.Org release). During the installation process,
        the X.Org display server will be set up to use the graphics and mouse
        drivers which come with the Guest Additions.</p><p>After installing the Guest Additions into a fresh installation of
        a supported Linux distribution or Solaris system (many unsupported
        systems will work correctly too), the guest's graphics
        mode will change to fit the size of the VirtualBox window
        on the host when it is resized.  You can also ask the guest system to
        switch to a particular resolution by sending a "video mode hint" using
        the <code class="computeroutput">VBoxManage</code> tool.</p><p>Multiple guest monitors are supported in guests using the X.Org
        server version 1.3 (which is part of release 7.3 of the X Window System
        version 11) or a later version. The layout of the guest screens can
        be adjusted as needed using the tools which come with the guest
        operating system.</p><p>If you want to understand more about the details of how the
        X.Org drivers are set up (in particular if you wish to use them in a
        setting which our installer doesn't handle correctly), you should read
        <a href="ch09.html#guestxorgsetup" title="9.4.2. Guest graphics and mouse driver setup in depth">Section 9.4.2, &#8220;Guest graphics and mouse driver setup in depth&#8221;</a>.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm1992"></a>4.2.2.3. Updating the Linux Guest Additions</h4></div></div></div><p>The Guest Additions can simply be updated by going through the
        installation procedure again with an updated CD-ROM image. This will
        replace the drivers with updated versions. You should reboot after
        updating the Guest Additions.</p></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm1995"></a>4.2.2.4. Uninstalling the Linux Guest Additions</h4></div></div></div><p>If you have a version of the Guest Additions installed on your
        virtual machine and wish to remove it without installing new ones, you
        can do so by inserting the Guest Additions CD image into the virtual
        CD-ROM drive as described above and running the installer for the
        current Guest Additions with the "uninstall" parameter from the path
        that the CD image is mounted on in the guest: </p><pre class="screen">sh ./VBoxLinuxAdditions.run uninstall</pre><p>While this will normally work without issues, you may need to do some
        manual cleanup of the guest (particularly of the XFree86Config or
        xorg.conf file) in some cases, particularly if the Additions version
        installed or the guest operating system were very old, or if you made
        your own changes to the Guest Additions setup after you installed
        them.</p><p>Starting with version 3.1.0, you can uninstall the Additions by
        invoking </p><pre class="screen">/opt/VBoxGuestAdditions-5.1.14/uninstall.sh</pre><p>Please
        replace
        <code class="computeroutput">/opt/VBoxGuestAdditions-5.1.14</code>
        with the correct Guest Additions installation directory.</p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="idm2003"></a>4.2.3. Guest Additions for Solaris</h3></div></div></div><p>Like the Windows Guest Additions, the VirtualBox Guest Additions
      for Solaris take the form of a set of device drivers and system
      applications which may be installed in the guest operating
      system.</p><p>The following Solaris distributions are officially
      supported:</p><div class="itemizedlist"><ul type="disc"><li><p>Solaris 11 including Solaris 11 Express;</p></li><li><p>Solaris 10 (u5 and higher);</p></li></ul></div><p>Other distributions may work if they are based on comparable
      software releases.</p><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm2013"></a>4.2.3.1. Installing the Solaris Guest Additions</h4></div></div></div><p>The VirtualBox Guest Additions for Solaris are provided on the
        same ISO CD-ROM as the Additions for Windows and Linux described
        above. They also come with an installation program guiding you through
        the setup process.</p><p>Installation involves the following steps:</p><div class="orderedlist"><ol type="1"><li><p>Mount the
            <code class="computeroutput">VBoxGuestAdditions.iso</code> file as
            your Solaris guest's virtual CD-ROM drive, exactly the same way as
            described for a Windows guest in <a href="ch04.html#mountingadditionsiso" title="4.2.1.1. Installation">Section 4.2.1.1, &#8220;Installation&#8221;</a>.</p><p>If in case the CD-ROM drive on the guest doesn't get mounted
            (observed on some versions of Solaris 10), execute as root:</p><pre class="screen">svcadm restart volfs</pre></li><li><p>Change to the directory where your CD-ROM drive is mounted
            and execute as root:</p><pre class="screen">pkgadd -G -d ./VBoxSolarisAdditions.pkg</pre></li><li><p>Choose "1" and confirm installation of the Guest Additions
            package. After the installation is complete, re-login to X server
            on your guest to activate the X11 Guest Additions.</p></li></ol></div></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm2029"></a>4.2.3.2. Uninstalling the Solaris Guest Additions</h4></div></div></div><p>The Solaris Guest Additions can be safely removed by removing
        the package from the guest. Open a root terminal session and
        execute:</p><pre class="screen">pkgrm SUNWvboxguest</pre></div><div class="sect3" lang="en"><div class="titlepage"><div><div><h4 class="title"><a name="idm2034"></a>4.2.3.3. Updating the Solaris Guest Additions</h4></div></div></div><p>The Guest Additions should be updated by first uninstalling the
        existing Guest Additions and then installing the new ones. Attempting
        to install new Guest Additions without removing the existing ones is
        not possible.</p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="idm2037"></a>4.2.4. Guest Additions for OS/2</h3></div></div></div><p>VirtualBox also ships with a set of drivers that improve running
      OS/2 in a virtual machine. Due to restrictions of OS/2 itself, this
      variant of the Guest Additions has a limited feature set; see <a href="ch14.html" title="Chapter 14. Known limitations">Chapter 14, <i>Known limitations</i></a> for details.</p><p>The OS/2 Guest Additions are provided on the same ISO CD-ROM as
      those for the other platforms. As a result, mount the ISO in OS/2 as
      described previously. The OS/2 Guest Additions are located in the
      directory <code class="computeroutput">\32bit\OS2</code>.</p><p>As we do not provide an automatic installer at this time, please
      refer to the <code class="computeroutput">readme.txt</code> file in that
      directory, which describes how to install the OS/2 Guest Additions
      manually.</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="sharedfolders"></a>4.3. Shared folders</h2></div></div></div><p>With the "shared folders" feature of VirtualBox, you can access
    files of your host system from within the guest system. This is similar
    how you would use network shares in Windows networks -- except that shared
    folders do not need require networking, only the Guest Additions. Shared
    Folders are supported with Windows (2000 or newer), Linux and Solaris
    guests.</p><p>Shared folders must physically reside on the
    <span class="emphasis"><em>host</em></span> and are then shared with the guest, which uses a
    special file system driver in the Guest Addition to talk to the host. For
    Windows guests, shared folders are implemented as a pseudo-network
    redirector; for Linux and Solaris guests, the Guest Additions provide a
    virtual file system.</p><p>To share a host folder with a virtual machine in VirtualBox, you
    must specify the path of that folder and choose for it a "share name" that
    the guest can use to access it. Hence, first create the shared folder on
    the host; then, within the guest, connect to it.</p><p>There are several ways in which shared folders can be set up for a
    particular virtual machine:</p><div class="itemizedlist"><ul type="disc"><li><p>In the window of a running VM, you can select "Shared folders"
          from the "Devices" menu, or click on the folder icon on the status
          bar in the bottom right corner.</p></li><li><p>If a VM is not currently running, you can configure shared
          folders in each virtual machine's "Settings" dialog.</p></li><li><p>From the command line, you can create shared folders using
          VBoxManage, as follows: </p><pre class="screen">VBoxManage sharedfolder add "VM name" --name "sharename" --hostpath "C:\test"</pre><p>See <a href="ch08.html#vboxmanage-sharedfolder" title="8.32. VBoxManage sharedfolder add/remove">Section 8.32, &#8220;VBoxManage sharedfolder add/remove&#8221;</a> for
          details.</p></li></ul></div><p>There are two types of shares:</p><div class="orderedlist"><ol type="1"><li><p>VM shares which are only available to the VM for which they have
        been defined;</p></li><li><p>transient VM shares, which can be added and removed at runtime
        and do not persist after a VM has stopped; for these, add the
        <code class="computeroutput">--transient</code> option to the above
        command line.</p></li></ol></div><p>Shared folders have read/write access to the files at the host path
    by default. To restrict the guest to have read-only access, create a
    read-only shared folder. This can either be achieved using the GUI or by
    appending the parameter <code class="computeroutput">--readonly</code> when
    creating the shared folder with VBoxManage.</p><p>Starting with version 4.0, VirtualBox shared folders also support
    symbolic links (<span class="bold"><strong>symlinks</strong></span>), under the
    following conditions:</p><div class="orderedlist"><ol type="1"><li><p>The host operating system must support symlinks (i.e. a Mac,
          Linux or Solaris host is required).</p></li><li><p>Currently only Linux and Solaris Guest Additions support
          symlinks.</p></li><li><p>For security reasons the guest OS is not allowed to create
          symlinks by default. If you trust the guest OS to not abuse the
          functionality, you can enable creation of symlinks for "sharename"
          with:
          </p><pre class="screen">VBoxManage setextradata "VM name" VBoxInternal2/SharedFoldersEnableSymlinksCreate/sharename 1</pre></li></ol></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sf_mount_manual"></a>4.3.1. Manual mounting</h3></div></div></div><p>You can mount the shared folder from inside a VM the same way as
      you would mount an ordinary network share:</p><div class="itemizedlist"><ul type="disc"><li><p>In a Windows guest, shared folders are browseable and
            therefore visible in Windows Explorer. So, to attach the host's
            shared folder to your Windows guest, open Windows Explorer and
            look for it under "My Networking Places" &#8594; "Entire Network"
            &#8594; "VirtualBox Shared Folders". By right-clicking on a shared
            folder and selecting "Map network drive" from the menu that pops
            up, you can assign a drive letter to that shared folder.</p><p>Alternatively, on the Windows command line, use the
            following:</p><pre class="screen">net use x: \\vboxsvr\sharename</pre><p>While <code class="computeroutput">vboxsvr</code> is a fixed
            name (note that <code class="computeroutput">vboxsrv</code> would
            also work), replace "x:" with the drive letter that you want to
            use for the share, and <code class="computeroutput">sharename</code>
            with the share name specified with
            <code class="computeroutput">VBoxManage</code>.</p></li><li><p>In a Linux guest, use the following command:</p><pre class="screen">mount -t vboxsf [-o OPTIONS] sharename mountpoint</pre><p>To mount a shared folder during boot, add the following
            entry to /etc/fstab:</p><pre class="screen">sharename   mountpoint   vboxsf   defaults  0   0</pre></li><li><p>In a Solaris guest, use the following command:</p><pre class="screen">mount -F vboxfs [-o OPTIONS] sharename mountpoint</pre><p>Replace <code class="computeroutput">sharename</code> (use
            lowercase) with the share name specified with
            <code class="computeroutput">VBoxManage</code> or the GUI, and
            <code class="computeroutput">mountpoint</code> with the path where
            you want the share to be mounted on the guest (e.g.
            <code class="computeroutput">/mnt/share</code>). The usual mount
            rules apply, that is, create this directory first if it does not
            exist yet.</p><p>Here is an example of mounting the shared folder for the
            user "jack" on Solaris:</p><pre class="screen">$ id
uid=5000(jack) gid=1(other)
$ mkdir /export/home/jack/mount
$ pfexec mount -F vboxfs -o uid=5000,gid=1 jackshare /export/home/jack/mount
$ cd ~/mount
$ ls
sharedfile1.mp3 sharedfile2.txt
$</pre><p>Beyond the standard options supplied by the
            <code class="computeroutput">mount</code> command, the following are
            available:</p><pre class="screen">iocharset CHARSET</pre><p>to set the character set used for I/O operations. Note that
            on Linux guests, if the "iocharset" option is not specified then
            the Guest Additions driver will attempt to use the character set
            specified by the CONFIG_NLS_DEFAULT kernel option.  If this option
            is not set either then UTF-8 will be used. Also,</p><pre class="screen">convertcp CHARSET</pre><p>is available in order to specify the character set used for
            the shared folder name (utf8 by default).</p><p>The generic mount options (documented in the mount manual
            page) apply also. Especially useful are the options
            <code class="computeroutput">uid</code>,
            <code class="computeroutput">gid</code> and
            <code class="computeroutput">mode</code>, as they allow access by
            normal users (in read/write mode, depending on the settings) even
            if root has mounted the filesystem.</p></li></ul></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="sf_mount_auto"></a>4.3.2. Automatic mounting</h3></div></div></div><p>Starting with version 4.0, VirtualBox can mount shared folders
      automatically, at your option. If automatic mounting is enabled for a
      specific shared folder, the Guest Additions will automatically mount
      that folder as soon as a user logs into the guest OS. The details depend
      on the guest OS type:</p><div class="itemizedlist"><ul type="disc"><li><p>With <span class="bold"><strong>Windows guests,</strong></span> any
            auto-mounted shared folder will receive its own drive letter (e.g.
            <code class="computeroutput">E:</code>) depending on the free drive
            letters remaining in the guest.</p><p>If there no free drive letters left, auto-mounting will
            fail; as a result, the number of auto-mounted shared folders is
            typically limited to 22 or less with Windows guests.</p></li><li><p>With <span class="bold"><strong>Linux guests,</strong></span>
            auto-mounted shared folders are mounted into the
            <code class="computeroutput">/media</code> directory, along with the
            prefix <code class="computeroutput">sf_</code>. For example, the
            shared folder <code class="computeroutput">myfiles</code> would be
            mounted to <code class="computeroutput">/media/sf_myfiles</code> on
            Linux and <code class="computeroutput">/mnt/sf_myfiles</code> on
            Solaris.</p><p>The guest property
            <code class="computeroutput">/VirtualBox/GuestAdd/SharedFolders/MountPrefix</code>
            determines the prefix that is used. Change that guest property to
            a value other than "sf" to change that prefix; see <a href="ch04.html#guestadd-guestprops" title="4.7. Guest properties">Section 4.7, &#8220;Guest properties&#8221;</a> for details.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>Access to auto-mounted shared folders is only
                granted to the user group
                <code class="computeroutput">vboxsf</code>, which is created by
                the VirtualBox Guest Additions installer. Hence guest users
                have to be member of that group to have read/write
                access or to have read-only access in case the folder is not
                mapped writable.</p></div><p>To change the mount directory to something other than
            <code class="computeroutput">/media</code>, you can set the guest
            property
            <code class="computeroutput">/VirtualBox/GuestAdd/SharedFolders/MountDir</code>.</p></li><li><p><span class="bold"><strong>Solaris guests</strong></span> behave like
            Linux guests except that <code class="computeroutput">/mnt</code> is
            used as the default mount directory instead of
            <code class="computeroutput">/media</code>.</p></li></ul></div><p>To have any changes to auto-mounted shared folders applied while a
      VM is running, the guest OS needs to be rebooted. (This applies only to
      auto-mounted shared folders, not the ones which are mounted
      manually.)</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="guestadd-dnd"></a>4.4. Drag and Drop</h2></div></div></div><p>Starting with version 5.0, VirtualBox supports to drag and drop content
    from the host to the guest and vice versa. For this to work the latest Guest
    Additions must be installed on the guest.</p><p>Drag and drop transparently allows copying or opening files, directories
    and even certain clipboard formats from one end to the other, e.g. from the
    host to the guest or from the guest to the host. One then can perform drag and
    drop operations between the host and a VM as it would be a native drag and drop
    operation on the host OS.</p><p>At the moment drag and drop is implemented for Windows- and X-Windows-based
    systems, both, on host and guest side. As X-Windows sports different drag and drop
    protocols only the most used one, XDND, is supported for now. Applications using
    other protocols (such as Motif or OffiX) will not be recognized by VirtualBox.</p><p>In context of using drag and drop the origin of the data is called
    <span class="bold"><strong>source</strong></span>, that is, where the actual data comes
    from and is specified. On the other hand there is the
    <span class="bold"><strong>target</strong></span>, which specifies where the data from
    the source should go to. Transferring data from the source to the target can
    be done in various ways, e.g. copying, moving or linking.<sup>[<a name="idm2160" href="#ftn.idm2160">19</a>]</sup></p><p>When transferring data from the host to the guest OS, the host in
    this case is the source, whereas the guest OS is the target. However, when
    doing it the other way around, that is, transferring data from the guest OS
    to the host, the guest OS this time became the source and the host is the
    target.</p><p>For security reasons drag and drop can be configured at runtime on a
    per-VM basis either using the "Drag and Drop" menu item in the "Devices" menu
    of the virtual machine or VBoxManage: The following four modes are
    available:</p><div class="mediaobject" align="center"><table border="0" summary="manufactured viewport for HTML img" cellspacing="0" cellpadding="0" width="354"><tr><td align="center"><img src="images/dnd-modes.png" align="middle" width="354"></td></tr></table></div><div class="itemizedlist"><ul type="disc"><li><p><span class="bold"><strong>Disabled</strong></span> disables the drag and drop
        entirely. This is the default when creating new VMs.</p></li><li><p><span class="bold"><strong>Host To Guest</strong></span> enables performing
        drag and drop operations from the host to the guest only.</p></li><li><p><span class="bold"><strong>Guest To Host</strong></span> enables performing
        drag and drop operations from the guest to the host only.</p></li><li><p><span class="bold"><strong>Bidirectional</strong></span> enables performing
        drag and drop operations to both directions, e.g. from the host to the guest
        and vice versa.</p></li></ul></div><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>Drag and drop support depends on the frontend being used; at the
    moment only the VirtualBox Manager frontend provides this
    functionality.</p></div><p>To use VBoxManage for controlling the current drag and drop mode, see <a href="ch08.html" title="Chapter 8. VBoxManage">Chapter 8, <i>VBoxManage</i></a>. The commands <code class="computeroutput">modifyvm</code>
    and <code class="computeroutput">controlvm</code> allow setting the VM's current
    drag and drop mode via command line.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="guestadd-dnd-formats"></a>4.4.1. Supported formats</h3></div></div></div><p>As VirtualBox can run on a variety of host OSes and also supports a wide
      range of guests, certain data formats must be translated after those
      got transferred over so that the target OS (that is, the side which receiving the
      data) is able to handle them in an appropriate manner.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>When dragging files however, no data conversion is done in any way, e.g.
      when transferring a file from a Linux guest to a Windows host the Linux-specific
      line endings won't be converted to Windows ones.</p></div><p>The following formats are handled by the VirtualBox drag and drop service:
        </p><div class="itemizedlist"><ul type="disc"><li><p><span class="bold"><strong>Plain text</strong></span>, from applications such as
            text editors, internet browsers and terminal windows</p></li><li><p><span class="bold"><strong>Files</strong></span>, from file managers such
            as Windows explorer, Nautilus and Finder</p></li><li><p><span class="bold"><strong>Directories</strong></span>, where the same applies
            as for files</p></li></ul></div><p>
      </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="guestadd-dnd-limitations"></a>4.4.2. Known limitations</h3></div></div></div><p>The following limitations are known:
        </p><div class="itemizedlist"><ul type="disc"><li><p>On Windows hosts, dragging and dropping content from
            <span class="bold"><strong>UAC-elevated (User Account Control)</strong></span> programs
            to non-UAC-elevated programs and vice versa is now allowed. So when starting
            VirtualBox with Administrator privileges then drag and drop will not work with
            the Windows Explorer which runs with regular user privileges by default.</p></li></ul></div><p>
      </p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="guestadd-video"></a>4.5. Hardware-accelerated graphics</h2></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="guestadd-3d"></a>4.5.1. Hardware 3D acceleration (OpenGL and Direct3D 8/9)</h3></div></div></div><p>The VirtualBox Guest Additions contain experimental hardware 3D
      support for Windows, Linux and Solaris guests.<sup>[<a name="idm2215" href="#ftn.idm2215">20</a>]</sup></p><p>With this feature, if an application inside your virtual machine
      uses 3D features through the OpenGL or Direct3D 8/9 programming
      interfaces, instead of emulating them in software (which would be slow),
      VirtualBox will attempt to use your host's 3D hardware. This works for
      all supported host platforms (Windows, Mac, Linux, Solaris), provided
      that your host operating system can make use of your accelerated 3D
      hardware in the first place.</p><p>The 3D acceleration currently has the following
      preconditions:</p><div class="orderedlist"><ol type="1"><li><p>It is only available for certain Windows, Linux and Solaris
            guests. In particular:</p><div class="itemizedlist"><ul type="disc"><li><p>3D acceleration with Windows guests requires Windows
                  2000, Windows XP, Vista or Windows 7. Both OpenGL and
                  Direct3D 8/9 (not with Windows 2000) are supported
                  (experimental).</p></li><li><p>OpenGL on Linux requires kernel 2.6.27 and higher as
                  well as X.org server version 1.5 and higher. Ubuntu 10.10
                  and Fedora 14 have been tested and confirmed as
                  working.</p></li><li><p>OpenGL on Solaris guests requires X.org server version
                  1.5 and higher.</p></li></ul></div></li><li><p>The Guest Additions must be installed.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>For the basic Direct3D acceleration to work in a Windows Guest,
                VirtualBox needs to replace Windows system files in the
                virtual machine. As a result, the Guest Additions installation
                program offers Direct3D acceleration as an option that must
                be explicitly enabled. Also, you must install the Guest
                Additions in "Safe Mode". This does <span class="bold"><strong>not</strong></span>
                apply to the experimental WDDM Direct3D video
                driver available for Vista and Windows 7 guests,
                see <a href="ch14.html" title="Chapter 14. Known limitations">Chapter 14, <i>Known limitations</i></a>
                for details.</p></div><p>
              </p></li><li><p>Because 3D support is still experimental at this time, it is
            disabled by default and must be <span class="bold"><strong>manually
            enabled</strong></span> in the VM settings (see <a href="ch03.html#generalsettings" title="3.3. General settings">Section 3.3, &#8220;General settings&#8221;</a>).</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>
              Untrusted guest systems should not be allowed to use
              VirtualBox's 3D acceleration features, just as untrusted host
              software should not be allowed to use 3D acceleration.  Drivers
              for 3D hardware are generally too complex to be made properly
              secure and any software which is allowed to access them may be
              able to compromise the operating system running them.  In
              addition, enabling 3D acceleration gives the guest direct access
              to a large body of additional program code in the VirtualBox
              host process which it might conceivably be able to use to crash
              the virtual machine.
            </p></div></li></ol></div><p>With VirtualBox 4.1, Windows Aero theme support is added for
      Windows Vista and Windows 7 guests. To enable Aero theme support,
      the experimental VirtualBox WDDM video driver must be installed,
      which is available with the Guest Additions installation.
      Since the WDDM video driver is still experimental at this time, it is
      not installed by default and must be <span class="bold"><strong>manually
      selected</strong></span> in the Guest Additions installer by answering "No"
      int the "Would you like to install basic Direct3D support" dialog
      displayed when the Direct3D feature is selected.
      </p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>Unlike the current basic Direct3D support, the WDDM video
      driver installation does <span class="bold"><strong>not</strong></span> require
      the "Safe Mode".</p></div><p>The Aero theme is not enabled by default. To enable it
        </p><div class="itemizedlist"><ul type="disc"><li><p>In Windows Vista guest: right-click on the desktop, in the
            context menu select "Personalize", then select "Windows Color and Appearance"
            in the "Personalization" window, in the "Appearance Settings" dialog select
            "Windows Aero" and press "OK"</p></li><li><p>In Windows 7 guest: right-click on the desktop, in the
            context menu select "Personalize" and select any Aero theme
            in the "Personalization" window</p></li></ul></div><p>
      </p><p>Technically, VirtualBox implements this by installing an
      additional hardware 3D driver inside your guest when the Guest Additions
      are installed. This driver acts as a hardware 3D driver and reports to
      the guest operating system that the (virtual) hardware is capable of 3D
      hardware acceleration. When an application in the guest then requests
      hardware acceleration through the OpenGL or Direct3D programming
      interfaces, these are sent to the host through a special communication
      tunnel implemented by VirtualBox, and then the <span class="emphasis"><em>host</em></span>
      performs the requested 3D operation via the host's programming
      interfaces.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="guestadd-2d"></a>4.5.2. Hardware 2D video acceleration for Windows guests</h3></div></div></div><p>Starting with version 3.1, the VirtualBox Guest Additions contain
      experimental hardware 2D video acceleration support for Windows
      guests.</p><p>With this feature, if an application (e.g. a video player) inside
      your Windows VM uses 2D video overlays to play a movie clip, then
      VirtualBox will attempt to use your host's video acceleration hardware
      instead of performing overlay stretching and color conversion in
      software (which would be slow). This currently works for Windows, Linux
      and Mac host platforms, provided that your host operating system can
      make use of 2D video acceleration in the first place.</p><p>The 2D video acceleration currently has the following
      preconditions:</p><div class="orderedlist"><ol type="1"><li><p>It is only available for Windows guests (XP or
            later).</p></li><li><p>The Guest Additions must be installed.</p></li><li><p>Because 2D support is still experimental at this time, it is
            disabled by default and must be <span class="bold"><strong>manually
            enabled</strong></span> in the VM settings (see <a href="ch03.html#generalsettings" title="3.3. General settings">Section 3.3, &#8220;General settings&#8221;</a>).</p></li></ol></div><p>Technically, VirtualBox implements this by exposing video overlay
      DirectDraw capabilities in the Guest Additions video driver. The driver
      sends all overlay commands to the host through a special communication
      tunnel implemented by VirtualBox. On the host side, OpenGL is then used
      to implement color space transformation and scaling</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="seamlesswindows"></a>4.6. Seamless windows</h2></div></div></div><p>With the "seamless windows" feature of VirtualBox, you can have the
    windows that are displayed within a virtual machine appear side by side
    next to the windows of your host. This feature is supported for the
    following guest operating systems (provided that the Guest Additions are
    installed):</p><div class="itemizedlist"><ul type="disc"><li><p>Windows guests (support added with VirtualBox 1.5);</p></li><li><p>Supported Linux or Solaris guests running the X Window System
          (added with VirtualBox 1.6).</p></li></ul></div><p>After seamless windows are enabled (see below), VirtualBox
    suppresses the display of the Desktop background of your guest, allowing
    you to run the windows of your guest operating system seamlessly next to
    the windows of your host:</p><div class="mediaobject" align="center"><table border="0" summary="manufactured viewport for HTML img" cellspacing="0" cellpadding="0" width="496"><tr><td align="center"><img src="images/seamless.png" align="middle" width="496"></td></tr></table></div><p>To enable seamless mode, after starting the virtual
    machine, press the Host key (normally the right control key) together with
    "L". This will enlarge the size of the VM's display to the size of your
    host screen and mask out the guest operating system's background. To go
    back to the "normal" VM display (i.e. to disable seamless windows), press
    the Host key and "L" again.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="guestadd-guestprops"></a>4.7. Guest properties</h2></div></div></div><p>Starting with version 2.1, VirtualBox allows for requesting certain
    properties from a running guest, provided that the VirtualBox Guest
    Additions are installed and the VM is running. This is good for two
    things:</p><div class="orderedlist"><ol type="1"><li><p>A number of predefined VM characteristics are automatically
          maintained by VirtualBox and can be retrieved on the host, e.g. to
          monitor VM performance and statistics.</p></li><li><p>In addition, arbitrary string data can be exchanged between
          guest and host. This works in both directions.</p></li></ol></div><p>To accomplish this, VirtualBox establishes a private communication
    channel between the VirtualBox Guest Additions and the host, and software
    on both sides can use this channel to exchange string data for arbitrary
    purposes. Guest properties are simply string keys to which a value is
    attached. They can be set (written to) by either the host and the guest,
    and they can also be read from both sides.</p><p>In addition to establishing the general mechanism of reading and
    writing values, a set of predefined guest properties is automatically
    maintained by the VirtualBox Guest Additions to allow for retrieving
    interesting guest data such as the guest's exact operating system and
    service pack level, the installed version of the Guest Additions, users
    that are currently logged into the guest OS, network statistics and more.
    These predefined properties are all prefixed with
    <code class="computeroutput">/VirtualBox/</code> and organized into a
    hierarchical tree of keys.</p><p>Some of this runtime information is shown when you select "Session
    Information Dialog" from a virtual machine's "Machine" menu.</p><p>A more flexible way to use this channel is via the
    <code class="computeroutput">VBoxManage guestproperty</code> command set; see
    <a href="ch08.html#vboxmanage-guestproperty" title="8.33. VBoxManage guestproperty">Section 8.33, &#8220;VBoxManage guestproperty&#8221;</a> for details. For example, to
    have <span class="emphasis"><em>all</em></span> the available guest properties for a given
    running VM listed with their respective values, use this:</p><pre class="screen">$ VBoxManage guestproperty enumerate "Windows Vista III"
VirtualBox Command Line Management Interface Version 5.1.14
(C) 2005-2017 Oracle Corporation
All rights reserved.

Name: /VirtualBox/GuestInfo/OS/Product, value: Windows Vista Business Edition,
    timestamp: 1229098278843087000, flags:
Name: /VirtualBox/GuestInfo/OS/Release, value: 6.0.6001,
    timestamp: 1229098278950553000, flags:
Name: /VirtualBox/GuestInfo/OS/ServicePack, value: 1,
    timestamp: 1229098279122627000, flags:
Name: /VirtualBox/GuestAdd/InstallDir,
    value: C:/Program Files/Oracle/VirtualBox
    Guest Additions, timestamp: 1229098279269739000, flags:
Name: /VirtualBox/GuestAdd/Revision, value: 40720,
    timestamp: 1229098279345664000, flags:
Name: /VirtualBox/GuestAdd/Version, value: 5.1.14,
    timestamp: 1229098279479515000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxControl.exe, value: 5.1.14r40720,
    timestamp: 1229098279651731000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxHook.dll, value: 5.1.14r40720,
    timestamp: 1229098279804835000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxDisp.dll, value: 5.1.14r40720,
    timestamp: 1229098279880611000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxMRXNP.dll, value: 5.1.14r40720,
    timestamp: 1229098279882618000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxService.exe, value: 5.1.14r40720,
    timestamp: 1229098279883195000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxTray.exe, value: 5.1.14r40720,
    timestamp: 1229098279885027000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxGuest.sys, value: 5.1.14r40720,
    timestamp: 1229098279886838000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxMouse.sys, value: 5.1.14r40720,
    timestamp: 1229098279890600000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxSF.sys, value: 5.1.14r40720,
    timestamp: 1229098279893056000, flags:
Name: /VirtualBox/GuestAdd/Components/VBoxVideo.sys, value: 5.1.14r40720,
    timestamp: 1229098279895767000, flags:
Name: /VirtualBox/GuestInfo/OS/LoggedInUsers, value: 1,
    timestamp: 1229099826317660000, flags:
Name: /VirtualBox/GuestInfo/OS/NoLoggedInUsers, value: false,
    timestamp: 1229098455580553000, flags:
Name: /VirtualBox/GuestInfo/Net/Count, value: 1,
    timestamp: 1229099826299785000, flags:
Name: /VirtualBox/HostInfo/GUI/LanguageID, value: C,
    timestamp: 1229098151272771000, flags:
Name: /VirtualBox/GuestInfo/Net/0/V4/IP, value: 192.168.2.102,
    timestamp: 1229099826300088000, flags:
Name: /VirtualBox/GuestInfo/Net/0/V4/Broadcast, value: 255.255.255.255,
    timestamp: 1229099826300220000, flags:
Name: /VirtualBox/GuestInfo/Net/0/V4/Netmask, value: 255.255.255.0,
    timestamp: 1229099826300350000, flags:
Name: /VirtualBox/GuestInfo/Net/0/Status, value: Up,
    timestamp: 1229099826300524000, flags:
Name: /VirtualBox/GuestInfo/OS/LoggedInUsersList, value: username,
    timestamp: 1229099826317386000, flags:</pre><p>To query the value of a single property, use the "get" subcommand
    like this:</p><pre class="screen">$ VBoxManage guestproperty get "Windows Vista III" "/VirtualBox/GuestInfo/OS/Product"
VirtualBox Command Line Management Interface Version 5.1.14
(C) 2005-2017 Oracle Corporation
All rights reserved.

Value: Windows Vista Business Edition</pre><p>To add or change guest properties from the guest, use the tool
    <code class="computeroutput">VBoxControl</code>. This tool is included in the
    Guest Additions of VirtualBox 2.2 or later. When started from a Linux
    guest, this tool requires root privileges for security reasons:</p><pre class="screen">$ sudo VBoxControl guestproperty enumerate
VirtualBox Guest Additions Command Line Management Interface Version 5.1.14
(C) 2009-2017 Oracle Corporation
All rights reserved.

Name: /VirtualBox/GuestInfo/OS/Release, value: 2.6.28-18-generic,
    timestamp: 1265813265835667000, flags: &lt;NULL&gt;
Name: /VirtualBox/GuestInfo/OS/Version, value: #59-Ubuntu SMP Thu Jan 28 01:23:03 UTC 2010,
    timestamp: 1265813265836305000, flags: &lt;NULL&gt;
      ...</pre><p>For more complex needs, you can use the VirtualBox programming
    interfaces; see <a href="ch11.html" title="Chapter 11. VirtualBox programming interfaces">Chapter 11, <i>VirtualBox programming interfaces</i></a>.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="guestadd-guestcontrol"></a>4.8. Guest control</h2></div></div></div><p>Starting with version 3.2, the Guest Additions of VirtualBox allow
    starting applications inside a VM from the host system.</p><p>For this to work, the application needs to be installed inside the
    guest; no additional software needs to be installed on the host.
    Additionally, text mode output (to stdout and stderr) can be shown on the
    host for further processing along with options to specify user credentials
    and a timeout value (in milliseconds) to limit time the application is
    able to run.</p><p>This feature can be used to automate deployment of software within
    the guest.</p><p>Starting with version 4.0, the Guest Additions for Windows allow for
    automatic updating (only already installed Guest Additions 4.0 or later).
    Also, copying files from host to the guest as well as remotely creating
    guest directories is available.</p><p>To use these features, use the VirtualBox command line, see <a href="ch08.html#vboxmanage-guestcontrol" title="8.34. VBoxManage guestcontrol">Section 8.34, &#8220;VBoxManage guestcontrol&#8221;</a>.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="idm2314"></a>4.9. Memory overcommitment</h2></div></div></div><p>In server environments with many VMs; the Guest Additions can be
    used to share physical host memory between several VMs, reducing the total
    amount of memory in use by the VMs. If memory usage is the limiting factor
    and CPU resources are still available, this can help with packing more VMs
    on each host.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="guestadd-balloon"></a>4.9.1. Memory ballooning</h3></div></div></div><p>Starting with version 3.2, the Guest Additions of VirtualBox can
      change the amount of host memory that a VM uses while the machine is
      running. Because of how this is implemented, this feature is called
      "memory ballooning".</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>VirtualBox supports memory ballooning only on 64-bit hosts, and
        it is not supported on Mac OS X hosts.</p></div><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>Memory ballooning does not work with large pages enabled. To
        turn off large pages support for a VM, run
        <code class="computeroutput">VBoxManage modifyvm &lt;VM name&gt; --largepages off</code>
        </p></div><p>Normally, to change the amount of memory allocated to a virtual
      machine, one has to shut down the virtual machine entirely and modify
      its settings. With memory ballooning, memory that was allocated for a
      virtual machine can be given to another virtual machine without having
      to shut the machine down.</p><p>When memory ballooning is requested, the VirtualBox Guest
      Additions (which run inside the guest) allocate physical memory from the
      guest operating system on the kernel level and lock this memory down in
      the guest. This ensures that the guest will not use that memory any
      longer: no guest applications can allocate it, and the guest kernel will
      not use it either. VirtualBox can then re-use this memory and give it to
      another virtual machine.</p><p>The memory made available through the ballooning mechanism is only
      available for re-use by VirtualBox. It is <span class="emphasis"><em>not</em></span>
      returned as free memory to the host. Requesting balloon memory from a
      running guest will therefore not increase the amount of free,
      unallocated memory on the host. Effectively, memory ballooning is
      therefore a memory overcommitment mechanism for multiple virtual
      machines while they are running. This can be useful to temporarily start
      another machine, or in more complicated environments, for sophisticated
      memory management of many virtual machines that may be running in
      parallel depending on how memory is used by the guests.</p><p>At this time, memory ballooning is only supported through
      VBoxManage. Use the following command to increase or decrease the size
      of the memory balloon within a running virtual machine that has Guest
      Additions installed: </p><pre class="screen">VBoxManage controlvm "VM name" guestmemoryballoon &lt;n&gt;</pre><p>where
      <code class="computeroutput">"VM name"</code> is the name or UUID of the
      virtual machine in question and
      <code class="computeroutput">&lt;n&gt;</code> is the amount of memory to
      allocate from the guest in megabytes. See <a href="ch08.html#vboxmanage-controlvm" title="8.13. VBoxManage controlvm">Section 8.13, &#8220;VBoxManage controlvm&#8221;</a> for more information.</p><p>You can also set a default balloon that will automatically be
      requested from the VM every time after it has started up with the
      following command: </p><pre class="screen">VBoxManage modifyvm "VM name" --guestmemoryballoon &lt;n&gt;</pre><p>By default, no balloon memory is allocated. This is a VM setting,
      like other <code class="computeroutput">modifyvm</code> settings, and
      therefore can only be set while the machine is shut down; see <a href="ch08.html#vboxmanage-modifyvm" title="8.8. VBoxManage modifyvm">Section 8.8, &#8220;VBoxManage modifyvm&#8221;</a>.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a name="guestadd-pagefusion"></a>4.9.2. Page Fusion</h3></div></div></div><p>Whereas memory ballooning simply reduces the amount of RAM that is
      available to a VM, Page Fusion works differently: it avoids memory
      duplication between several similar running VMs.</p><p>In a server environment running several similar VMs (e.g. with
      identical operating systems) on the same host, lots of memory pages are
      identical. VirtualBox's Page Fusion technology, introduced with
      VirtualBox 3.2, is a novel technique to efficiently identify these
      identical memory pages and share them between multiple VMs.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>VirtualBox supports Page Fusion only on 64-bit hosts, and it
          is not supported on Mac OS X hosts. Page Fusion currently works only
          with Windows guests (2000 and later).</p></div><p>The more similar the VMs on a given host are, the more efficiently
      Page Fusion can reduce the amount of host memory that is in use. It
      therefore works best if all VMs on a host run identical operating
      systems (e.g. Windows XP Service Pack 2). Instead of having a complete
      copy of each operating system in each VM, Page Fusion identifies the
      identical memory pages in use by these operating systems and eliminates
      the duplicates, sharing host memory between several machines
      ("deduplication"). If a VM tries to modify a page that has been shared
      with other VMs, a new page is allocated again for that VM with a copy of
      the shared page ("copy on write"). All this is fully transparent to the
      virtual machine.</p><p>You may be familiar with this kind of memory overcommitment from
      other hypervisor products, which call this feature "page sharing" or
      "same page merging". However, Page Fusion differs significantly from
      those other solutions, whose approaches have several
      drawbacks:</p><div class="orderedlist"><ol type="1"><li><p>Traditional hypervisors scan <span class="emphasis"><em>all</em></span> guest
            memory and compute checksums (hashes) for every single memory
            page. Then, they look for pages with identical hashes and compare
            the entire content of those pages; if two pages produce the same
            hash, it is very likely that the pages are identical in content.
            This, of course, can take rather long, especially if the system is
            not idling. As a result, the additional memory only becomes
            available after a significant amount of time (this can be hours or
            even days!). Even worse, this kind of page sharing algorithm
            generally consumes significant CPU resources and increases the
            virtualization overhead by 10-20%.</p><p>Page Fusion in VirtualBox uses logic in the VirtualBox Guest
            Additions to quickly identify memory cells that are most likely
            identical across VMs. It can therefore achieve most of the
            possible savings of page sharing almost immediately and with
            almost no overhead.</p></li><li><p>Page Fusion is also much less likely to be confused by
            identical memory that it will eliminate just to learn seconds
            later that the memory will now change and having to perform a
            highly expensive and often service-disrupting reallocation.</p></li></ol></div><p>At this time, Page Fusion can only be controlled with VBoxManage,
      and only while a VM is shut down. To enable Page Fusion for a VM, use
      the following command:</p><pre class="screen">VBoxManage modifyvm "VM name" --pagefusion on</pre><p>You can observe Page Fusion operation using some metrics.
      <code class="computeroutput">RAM/VMM/Shared</code> shows the total amount
      of fused pages, whereas the per-VM metric
      <code class="computeroutput">Guest/RAM/Usage/Shared</code> will return the
      amount of fused memory for a given VM. Please refer to <a href="ch08.html#metrics" title="8.35. VBoxManage metrics">Section 8.35, &#8220;VBoxManage metrics&#8221;</a> for information on how to query metrics.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>Enabling Page Fusion might indirectly increase the chances
      for malicious guests to successfully attack other VMs running on the
      same host, see <a href="ch13.html#pot-insecure" title="13.3.4. Potentially insecure operations">Section 13.3.4, &#8220;Potentially insecure operations&#8221;</a>.</p></div></div></div><div class="footnotes"><br><hr width="100" align="left"><div class="footnote"><p><sup>[<a name="ftn.idm1818" href="#idm1818">18</a>] </sup>The experimental WDDM driver was added with
          VirtualBox 4.1.</p></div><div class="footnote"><p><sup>[<a name="ftn.idm2160" href="#idm2160">19</a>] </sup>At
    the moment only copying of data is supported. Moving or linking is not yet
    implemented.</p></div><div class="footnote"><p><sup>[<a name="ftn.idm2215" href="#idm2215">20</a>] </sup>OpenGL support for Windows guests was added with VirtualBox
          2.1; support for Linux and Solaris followed with VirtualBox 2.2.
          With VirtualBox 3.0, Direct3D 8/9 support was added for Windows
          guests. OpenGL 2.0 is now supported as well.
          With VirtualBox 4.1 Windows Aero theme support is added for
          Windows Vista and Windows 7 guests (experimental)</p></div></div></div></body></html>
/      X£PX£P=p¥X§   ,    :https://www.virtualbox.org/manual/ch04.html necko:classified 1 security-info FnhllAKWRHGAlo+ESXykKAAAAAAAAAAAwAAAAAAAAEaphjojH6pBabDSgSnsfLHeAAQAAgAAAAAAAAAAAAAAAAAAAAAB4vFIJp5wRkeyPxAQ9RJGKPqbqVvKO0mKuIl8ec8o/uhmCjImkVxP+7sgiYWmMt8F+O2DZM7ZTG6GukivU8OT5gAAAAAAAAaOMIIGijCCBXKgAwIBAgIQGamPNXDjZn8smv0r9kdD3TANBgkqhkiG9w0BAQsFADBoMQswCQYDVQQGEwJVUzEbMBkGA1UEChMST3JhY2xlIENvcnBvcmF0aW9uMR8wHQYDVQQLExZTeW1hbnRlYyBUcnVzdCBOZXR3b3JrMRswGQYDVQQDExJPcmFjbGUgU1NMIENBIC0gRzIwHhcNMTYwOTE1MDAwMDAwWhcNMTcwOTE2MjM1OTU5WjCBkzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFTATBgNVBAcMDFJlZHdvb2QgQ2l0eTEbMBkGA1UECgwST3JhY2xlIENvcnBvcmF0aW9uMR4wHAYDVQQLDBVQRElUIE5ldHdvcmsgU2VydmljZXMxGzAZBgNVBAMMEnd3dy52aXJ0dWFsYm94Lm9yZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAO4nnqK/b4d3tbz3KSdZZZL2uqmWNWNy2LOPPrhFAkEP5BGn9wNo4WiLxjMmoUDrvsym2ymLDO3a8k64gwMlddEFrw8OXPISMLiUTJXTy6ZUfxLOHiyW3ldLwVUUiLD21H4PjoXODKWhkTE5vsBr3c1UO9AMtB835e3on2uIacaji2aJFiKcT4XX1v6ZP0wHsna2/9GHYLSVdsJIwONmjT8/DFpsMwANWx3M5xsQn1gUMRXYKgrRwugw82QV3Vcj7giWbJE96lretYJuA+zLN7+5cUg1uGyerVZOo/NK3GerQmrf2f4bm0pXXH5pBbmk6haljljMb2kQGkEy2f3wFbsCAwEAAaOCAwIwggL+MFsGA1UdEQRUMFKCFWZvcnVtcy52aXJ0dWFsYm94Lm9yZ4IVdXBkYXRlLnZpcnR1YWxib3gub3Jngg52aXJ0dWFsYm94Lm9yZ4ISd3d3LnZpcnR1YWxib3gub3JnMAkGA1UdEwQCMAAwHQYDVR0OBBYEFCAeOwNKBEVhD4nGnVA1ZYoQgaS5MB8GA1UdIwQYMBaAFGCMZpFfSchVH+a1mgx6V2VzOLSiMA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwOgYDVR0gBDMwMTAvBgZngQwBAgIwJTAjBggrBgEFBQcCARYXaHR0cHM6Ly9kLnN5bWNiLmNvbS9jcHMwUwYDVR0fBEwwSjBIoEagRIZCaHR0cDovL21zc2wtY3JsLndzLnN5bWFudGVjLmNvbS9Qcml2YXRlQ0EvNDQwNTI1MzY5LVJTQS1TSEEyNTYuY3JsMIGNBggrBgEFBQcBAQSBgDB+MCwGCCsGAQUFBzABhiBodHRwOi8vbXNzbC1vY3NwLndzLnN5bWFudGVjLmNvbTBOBggrBgEFBQcwAoZCaHR0cDovL21zc2wtYWlhLndzLnN5bWFudGVjLmNvbS9Qcml2YXRlQ0EvNDQwNTI1MzY5LVJTQS1TSEEyNTYuY2VyMIIBAgYKKwYBBAHWeQIEAgSB8wSB8ADuAHUA3esdK3oNT6Ygi4GtgWhwfi6OnQHVXIiNPRHEzbbsvswAAAFXLQr87QAABAMARjBEAiBsQIj2BwvBHTM6wpr/PeTX21W7Fgt78yZiPwgAVHuGRgIgIBwjJkagfuQErGGddBGQCfRTQwBkh2bPqsEncUzZftYAdQCkuQmQtBhYFIe7E6LMZ3AKPDWYBPkb37jjd80OyA3cEAAAAVctCv4tAAAEAwBGMEQCH2vikTCxvKGyXMGwAzfD650egY26HaLuRTRBxbcPaNoCIQDNRyDb/0eT8s29IJYVHn6wta3ymkmb0fGiFwXZNhR8CzANBgkqhkiG9w0BAQsFAAOCAQEAT1VgvAbq5FtLF1fZPGBluz8Dlo+SKatjqppmJ+cKbVvCR2+CrXqxJejN/gbinG9gqEoXmda/fDXFLIjk+E4usLzY2XkA0vMzkJ5JZZI4FcXavvPtltqXNbImfJ8+3xtrECxw1+vrKF/rUWt6Sw0AyWdHJOv68lX2ok1FW90CPv9Z7fvmeLlVDW5EN62nEZ5chLEsfh20PdlQiGzbzqShPzHt11WEc8rzv8070W1QdK30jXO6ZXi3eQyeNdSfh/ltbTBIDS3Aq9+C4Wk8vc5EsK7OgkKT0921dqxEMftK2yOo2bWxcXp+yzpnshf6xDg7Yci2Bykaz5OakopQmzQkgcAvAAMAAAAAAQEAAA== request-method GET response-head HTTP/1.1 200 OK
Date: Tue, 14 Feb 2017 18:40:34 GMT
Server: Oracle-Application-Server-11g
Last-Modified: Tue, 17 Jan 2017 12:42:13 GMT
Etag: "2b4007-13fd0-54649a11ad340"
Accept-Ranges: bytes
Content-Length: 81872
Content-Type: text/html
Content-Language: en
 charset windows-1252 uncompressed-len 0 predictor::resource-count 2 predictor::https://www.virtualbox.org/manual/images/dnd-modes.png 1,2,1487097880,0 predictor::https://www.virtualbox.org/manual/images/seamless.png 1,2,1487097880,0  ?Ð